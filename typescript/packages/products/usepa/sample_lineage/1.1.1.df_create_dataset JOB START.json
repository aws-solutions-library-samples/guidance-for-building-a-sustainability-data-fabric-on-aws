{
	"eventTime": "2024-02-23T08:47:19.359Z",
	"eventType": "START",
	"job": {
	  // namespace is openlineage namespace, therefore needs a human readable aspect to it for the marquez ui
	  "namespace": "<DOMAIN_NAME> - df.<DOMAIN_ID>",
	  // name needs to be unique within the namespace for the input/output combination. how about something like...
	  "name": "df_create_dataset - <DATA_PRODUCT_ID>",
	  "facets": {
		"documentation": {
			"_producer": "<AWS_STEP_FUNCTION_ARN>",
			"_schemaURL": "https://github.com/OpenLineage/OpenLineage/blob/main/spec/facets/DocumentationJobFacet.json",
			// description appropriate for the expected outcome, e.g. will it be transforming? Will it be generating a data qualitu profile? Should also include description from original request
			"description": "Catalogs the <ASSET_NAME> within the DataZone catalog for domain <DOMAIN_NAME> (<DOMAIN_ID>)."
		},
		"ownership": {
			"_producer": "<AWS_STEP_FUNCTION_ARN>",
		  	"_schemaURL": "https://openlineage.io/spec/facets/1-0-0/OwnershipJobFacet.json",
		  	"owners": [
			  // openlineage naming convention recommends using prefixes
				{ "name": "user:<data product owner>" },
				{ "name": "application:df.DataAssetModule" }
		  ]
		}
	  }
	},
	"run": {
	  // specification says recommends UUID for runId, but not enforced, but does need to be a globally unique string
	  "runId": "<aws state machine execution id>",
	  "facets": {
		// provide initial job stats
		"nominalTime": {
		  "_producer":  "<AWS_STEP_FUNCTION_ARN>",
		  "_schemaURL": "https://openlineage.io/spec/facets/1-0-0/NominalTimeRunFacet.json",
		  "nominalStartTime": "<PIPELINE_EXECUTION_START_TIME>"
		}
	  }
	},
	"inputs": [
	  {
		// 3P spreadsheet source. which means these are registration of source datasets. As these are uploaded prior to data assets module, needs a differnt produceer
		"namespace": "<DOMAIN_NAME> - df.<DOMAIN_ID>",
		"name": "usepa.ghg-emission-factors-hub-2023",
		"facets": {
            "dataSource": {
                "_producer": "<custom data product owner>",
                "_schemaURL": "https://openlineage.io/spec/facets/1-0-0/DatasourceDatasetFacet.json",
                "name": "<3rd party source name>",
                "url": "<3rd party source download url>"
            },
			"ownership": {
                "_producer": "<custom data product owner>",
                "_schemaURL": "https://openlineage.io/spec/facets/1-0-0/OwnershipDatasetFacet.json",
                "owners": [
                    {
                        "name": "user:<external user>"
                    }
                ]
            },
            "storage": {
                "_producer": "<custom data product owner>",
                "_schemaURL": "https://openlineage.io/spec/facets/1-0-0/StorageDatasetFacet.json",
                "storageLayer": "iceberg",
                "fileFormat": "csv"
            },
			// note: if this was structured 3P data, i.e. a csv, we would also add a schema facet too
            "version": {
                "_producer": "<custom data product owner>",
                "_schemaURL": "https://openlineage.io/spec/facets/1-0-0/DatasetVersionDatasetFacet.json",
                "datasetVersion": "<version>"
            }
		}
	  }
	],

	// producer here is producer of this data, therefore should be the data asset module
	"producer": "<AWS_STEP_FUNCTION_ARN>",
	"schemaURL": "https://openlineage.io/spec/1-0-5/OpenLineage.json#/definitions/RunEvent"
  }
